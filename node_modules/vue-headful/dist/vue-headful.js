'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _headful = require('headful');

var _headful2 = _interopRequireDefault(_headful);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

exports.default = {
    name: 'vue-headful',
    props: Object.keys(_headful2.default.props),
    created: function created() {
        (0, _headful2.default)(getPropsData(this));
    },

    watch: extendPropFunctionsWithPropList(_headful2.default.props),
    render: function render() {}
};

/**
 * Extends the prop functions for the watcher with a list of declared props on the component.
 * That is necessary so that, for example, a later change to `lang` does not overwrite `ogLocale`.
 */

function extendPropFunctionsWithPropList(headfulProps) {
    return Object.keys(headfulProps).reduce(function (watchers, propName) {
        return Object.assign({}, watchers, _defineProperty({}, propName, function (newPropValue) {
            // add list of props to avoid overwriting other head properties
            return headfulProps[propName](newPropValue, getPropsData(this));
        }));
    }, {});
}

function getPropsData(vueInstance) {
    return vueInstance.$options.propsData;
}